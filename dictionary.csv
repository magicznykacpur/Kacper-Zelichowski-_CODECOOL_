string "('Strings are amongst the most popular types in Python. We can create them simply by enclosing characters in quotes. Python treats single quotes the same as double quotes. Creating strings is as simple as assigning a value to a variable.', 'https://www.tutorialspoint.com/python3/python_strings.htm')"
tuple "('A tuple is a sequence of immutable Python objects. Tuples are sequences, just like lists. The main difference between the tuples and the lists is that the tuples cannot be changed unlike lists. Tuples use parentheses, whereas lists use square brackets. Creating a tuple is as simple as putting different comma-separated values.', 'https://www.tutorialspoint.com/python3/python_tuples.htm')"
parameter "('A  named entity in a function (or method) definition that specifies an argument that the function can accept', 'https://docs.python.org/3/glossary.html')"
variable "('Variables are nothing but reserved memory locations to store values. It means that when you create a variable, you reserve some space in the memory. Based on the data type of a variable, the interpreter allocates memory and decides what can be stored in the reserved memory. Therefore, by assigning different data types to the variables, you can store integers, decimals or characters in these variables.', 'https://www.tutorialspoint.com/python3/python_variable_types.htm')"
module "('A module is a file containing Python definitions and statements. The file name is the module name with the suffix .py appended. Within a module, the moduleâ€™s name (as a string) is available as the value of the global variable __name__.', 'https://docs.python.org/2/tutorial/modules.html')"
argument "('A value passed to a function when calling the function.', 'https://docs.python.org/3/glossary.html')"
dictionary "('Each key is separated from its value by a colon, the items are separated by commas, and the whole thing is enclosed in curly braces. An empty dictionary without any items is written with just two curly braces. Keys are unique within a dictionary while values may not be. The values of a dictionary can be of any type, but the keys must be of an immutable data type such as strings, numbers, or tuples.', 'https://www.tutorialspoint.com/python3/python_dictionary.htm')"
list "('The list is the most versatile datatype available in Python, which can be written as a list of comma-separated values (items) between square brackets. Important thing about a list is that the items in a list need not be of the same type. Creating a list is as simple as putting different comma-separated values between square brackets.', 'https://www.tutorialspoint.com/python3/python_lists.htm')"
function "('A function is a block of organized, reusable code that is used to perform a single, related action.', 'https://www.tutorialspoint.com/python3/python_functions.htm')"
ascii table "(""ASCII stands for American Standard Code for Information Interchange. Computers can only understand numbers, so an ASCII code is the numerical representation of a character such as 'a' or '@' or an action of some sort. ASCII was developed a long time ago and now the non-printing characters are rarely used for their original purpose."", 'http://www.asciitable.com/')"
class "('A template for creating user-defined objects. Class definitions normally contain method definitions which operate on instances of the class.', 'https://docs.python.org/3/glossary.html')"
lambda "('An anonymous inline function consisting of a single expression which is evaluated when the function is called. The syntax to create a lambda function is lambda [arguments]: expression', 'https://docs.python.org/3/glossary.html')"
importer "('An object that both finds and loads a module; both a finder and loader object.', 'https://docs.python.org/3/glossary.html')"
generator "('A function which returns a generator iterator. It looks like a normal function except that it contains yield expressions for producing a series of values usable in a for-loop or that can be retrieved one at a time with the next() function.', 'https://docs.python.org/3/glossary.html')"
slice "('An object usually containing a portion of a sequence. A slice is created using the subscript notation, [] with colons between numbers when several are given, such as in variable_name[1:3:5]. The bracket (subscript) notation uses slice objects internally.', 'https://docs.python.org/3/glossary.html')"
